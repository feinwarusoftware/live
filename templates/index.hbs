<!--
<header>
    <nav class="navbar navbar-expand-lg navbar-dark red fixed-top">
        <div class="container">
            <a class="navbar-brand" href="/">
                <img src="img/navbarlogo.png" height="30" alt="">
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Streamers
                            <span class="sr-only">(current)</span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="view intro-1 hm-black-strong">
        <div class="full-bg-img flex-center">
            <div class="container">
                <ul>
                    <li>
                        <div class="col-md-8 offset-md-2">
                            <img class="wow fadeInDown img-fluid" src="img/headerlogo.png" data-wow-delay="0.2s">
                        </div>
                    </li>
                    <li>
                        <a class="btn btn-orange btn-lg wow fadeInUp " href="https://www.patreon.com/awesomo" data-wow-delay="0.2s" rel="nofollow">Support on Patreon</a>
                        <a class="btn btn-indigo btn-lg wow fadeInUp " href="auth/discord" data-wow-delay="0.2s" rel="nofollow">Login with Discord</a>
                    </li>
                </ul>
            </div>
        </div>
    </section>
</header>
<div class="container">
    <div class="divider-new pt-5">
        <h2 class="h2-responsive wow fadeIn" data-wow-delay="0.2s">Streamers</h2>
    </div>
    <section id="streamers pb-5">
        <div class="col-12 row pt-3">
            <div class="col-xl-3 col-lg-4 col-md-4 col-sm-6 col-12">
                <div class="card wow fadeIn">
                    <img class="img-fluid" src="img/dragon.png" alt="Card image cap">
                    <div class="card-body">
                        <h4 class="card-title text-center">Dragon
                            <span class="badge red">Live</span>
                        </h4>
                        <hr>
                        <p class="card-text">You don't wanna watch my streams.</p>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-lg-4 col-md-4 col-sm-6 col-12">
                <div class="card wow fadeIn">
                    <img class="img-fluid" src="img/mattheous.png" alt="Card image cap">
                    <div class="card-body">
                        <h4 class="card-title text-center">Matt
                            <span class="badge red">Live</span>
                        </h4>
                        <hr>
                        <p class="card-text">Streams whenever the fuck he wants.</p>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-lg-4 col-md-4 col-sm-6 col-12">
                <div class="card wow fadeIn">
                    <img class="img-fluid" src="img/towelroyale.png" alt="Card image cap">
                    <div class="card-body">
                        <h4 class="card-title text-center">Towel
                            <span class="badge red">Live</span>
                        </h4>
                        <hr>
                        <p class="card-text">Streams weekly on Tuesdays at 5PM GMT.</p>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<footer class="page-footer center-on-small-only elegant-color-dark">
    <div class="container">
        <div class="row">
            <hr class="w-100 clearfix d-sm-none">
            <div class="col-lg-4 col-md-4 float-right">
                <img src="img/feinwaru_logo.png" class="img-fluid" alt="Responsive image">
            </div>
            <div class="col-lg-4 col-md-4">
                <h5 class="title font-bold mt-3 mb-4">Resources</h5>
                <ul>
                    <li>
                        <a href="../status">Status</a>
                    </li>
                    <li>
                        <a href="https://github.com/MattheousDT/awesom-o/wiki">Help & Support</a>
                    </li>
                    <li>
                        <a href="https://github.com/MattheousDT/awesom-o/issues">Feedback</a>
                    </li>
                    <li>
                        <a href="../terms">Terms</a>
                    </li>
                </ul>
            </div>
            <hr class="w-100 clearfix d-sm-none">
            <div class="col-lg-4 col-md-4 mx-auto">
                <h5 class="title font-bold mt-3 mb-4">About</h5>
                <ul>
                    <li>
                        <a href="../#about">About</a>
                    </li>
                    <li>
                        <a href="https://github.com/mattheousdt/awesom-o">Fork on Github</a>
                    </li>
                    <li>
                        <a href="https://patreon.com/awesomo">Donate</a>
                    </li>
                    <li>
                        <a href="https://discord.gg/southpark">/r/SouthPark Discord</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <hr>
    <div class="call-to-action">
        <ul>
            <li>
                <h5>Join the /r/SouthPark Discord</h5>
            </li>
            <li>
                <a class="btn btn-indigo" target="_blank" href="https://discord.gg/southpark" rel="nofollow">Join Now!</a>
            </li>
        </ul>
    </div>
    <div class="footer-copyright">
        <div class="container-fluid">Â© 2018 Copyright
            <a href="https://feinwaru.org/"> Feinwaru Software </a>
        </div>
    </div>
</footer>
-->

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>WebSockets - Simple chat</title>
    <style>
        * {
            font-family: tahoma;
            font-size: 12px;
            padding: 0px;
            margin: 0px;
        }

        p {
            line-height: 18px;
        }

        div {
            width: 500px;
            margin-left: auto;
            margin-right: auto;
        }

        #content {
            padding: 5px;
            background: #ddd;
            border-radius: 5px;
            overflow-y: scroll;
            border: 1px solid #CCC;
            margin-top: 10px;
            height: 160px;
        }

        #input {
            border-radius: 2px;
            border: 1px solid #ccc;
            margin-top: 10px;
            padding: 5px;
            width: 400px;
        }

        #status {
            width: 88px;
            display: block;
            float: left;
            margin-top: 15px;
        }
    </style>
</head>

<body>
    <div id="content"></div>
    <div>
        <span id="status">Connecting...</span>
        <input type="text" id="input" disabled="disabled" />
    </div>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
    <script>
        $(function () {
            "use strict";

            // for better performance - to avoid searching in DOM
            var content = $('#content');
            var input = $('#input');
            var status = $('#status');

            // my color assigned by the server
            var myColor = false;
            // my name sent to the server
            var myName = false;

            // if user is running mozilla then use it's built-in WebSocket
            window.WebSocket = window.WebSocket || window.MozWebSocket;

            // if browser doesn't support WebSocket, just show
            // some notification and exit
            if (!window.WebSocket) {
                content.html($('<p>', {
                    text: 'Sorry, but your browser doesn\'t support WebSocket.'
                }));
                input.hide();
                $('span').hide();
                return;
            }

            // open connection
            var connection = new WebSocket('ws://127.0.0.1:80');

            connection.onopen = function () {
                // first we want users to enter their names
                input.removeAttr('disabled');
                status.text('Choose name:');
            };

            connection.onerror = function (error) {
                // just in there were some problems with connection...
                content.html($('<p>', {
                    text: 'Sorry, but there\'s some problem with your ' +
                        'connection or the server is down.'
                }));
            };

            // most important part - incoming messages
            connection.onmessage = function (message) {
                // try to parse JSON message. Because we know that the server
                // always returns JSON this should work without any problem but
                // we should make sure that the massage is not chunked or
                // otherwise damaged.
                try {
                    var json = JSON.parse(message.data);
                } catch (e) {
                    console.log('Invalid JSON: ', message.data);
                    return;
                }

                // NOTE: if you're not sure about the JSON structure
                // check the server source code above
                // first response from the server with user's color
                if (json.type === 'color') {
                    myColor = json.data;
                    status.text(myName + ': ').css('color', myColor);
                    input.removeAttr('disabled').focus();
                    // from now user can start sending messages
                } else if (json.type === 'history') { // entire message history
                    // insert every single message to the chat window
                    for (var i = 0; i < json.data.length; i++) {
                        addMessage(json.data[i].author, json.data[i].text,
                            json.data[i].color, new Date(json.data[i].time));
                    }
                } else if (json.type === 'message') { // it's a single message
                    // let the user write another message
                    input.removeAttr('disabled');
                    addMessage(json.data.author, json.data.text,
                        json.data.color, new Date(json.data.time));
                } else {
                    console.log('Hmm..., I\'ve never seen JSON like this:', json);
                }
            };

            /**
             * Send message when user presses Enter key
             */
            input.keydown(function (e) {
                if (e.keyCode === 13) {
                    var msg = $(this).val();
                    if (!msg) {
                        return;
                    }
                    // send the message as an ordinary text
                    connection.send(msg);
                    $(this).val('');
                    // disable the input field to make the user wait until server
                    // sends back response
                    input.attr('disabled', 'disabled');

                    // we know that the first message sent from a user their name
                    if (myName === false) {
                        myName = msg;
                    }
                }
            });

            /**
             * This method is optional. If the server wasn't able to
             * respond to the in 3 seconds then show some error message 
             * to notify the user that something is wrong.
             */
            setInterval(function () {
                if (connection.readyState !== 1) {
                    status.text('Error');
                    input.attr('disabled', 'disabled').val(
                        'Unable to communicate with the WebSocket server.');
                }
            }, 3000);

            /**
             * Add message to the chat window
             */
            function addMessage(author, message, color, dt) {
                content.prepend('<p><span style="color:' + color + '">' +
                    author + '</span> @ ' + (dt.getHours() < 10 ? '0' +
                        dt.getHours() : dt.getHours()) + ':' +
                    (dt.getMinutes() < 10 ?
                        '0' + dt.getMinutes() : dt.getMinutes()) +
                    ': ' + message + '</p>');
            }
        });
    </script>
</body>

</html>